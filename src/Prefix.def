
/* WARNING: this file is generated:

   Generator:       tools/phrase_gen
   Generator input: tools/phrase_gen.def

   USAGE: cd tools ; make gen    # hash table
      OR: cd tools ; make gen2   # search tree

   ╔══════╤═════ PHRASE TABLE ═══╤═══╤═══════════════╗
   ║number│ phrase               │len│ alias         ║
   ╟──────┼──────────────────────┼───┼───────────────╢
   ║   0  │                      │ 0 │               ║
   ║   1  │  (    VAL  )         │ 3 │               ║
   ║   2  │  (    F   )          │ 3 │ LPAR_B_RPAR_  ║
   ║   3  │  (    F   [X]  )     │ 4 │               ║
   ║   4  │  F0                  │ 1 │               ║
   ║   5  │  ←    F   VAL        │ 3 │               ║
   ║   6  │  →    F   VAL        │ 3 │               ║
   ║   7  │  F   F   VAL         │ 3 │               ║
   ║   8  │  [ ;  F   VAL        │ 3 │               ║
   ║   9  │  END  F   VAL        │ 3 │               ║
   ║  10  │  (    F   VAL        │ 3 │               ║
   ║  11  │  [X]  F   VAL        │ 3 │               ║
   ║  12  │  RET  F   VAL        │ 3 │               ║
   ║  13  │  OP1  F   VAL        │ 3 │               ║
   ║  14  │  ←    F   [X]  VAL   │ 4 │               ║
   ║  15  │  →    F   [X]  VAL   │ 4 │               ║
   ║  16  │  F   F   [X]  VAL    │ 4 │               ║
   ║  17  │  [ ;  F   [X]  VAL   │ 4 │               ║
   ║  18  │  END  F   [X]  VAL   │ 4 │               ║
   ║  19  │  (    F   [X]  VAL   │ 4 │               ║
   ║  20  │  [X]  F   [X]  VAL   │ 4 │               ║
   ║  21  │  RET  F   [X]  VAL   │ 4 │               ║
   ║  22  │  OP1  F   [X]  VAL   │ 4 │               ║
   ║  23  │  VAL  F   VAL        │ 3 │               ║
   ║  24  │  VAL  OP1  VAL       │ 3 │               ║
   ║  25  │  VAL  F   [X]  VAL   │ 4 │               ║
   ║  26  │  VAL  OP1  [X]  VAL  │ 4 │               ║
   ║  27  │  F   OP1             │ 2 │               ║
   ║  28  │  OP1  OP1            │ 2 │               ║
   ║  29  │  F   OP1  [X]        │ 3 │               ║
   ║  30  │  F   [X]  OP1        │ 3 │               ║
   ║  31  │  F   [X]  OP1  [X]   │ 4 │               ║
   ║  32  │  VAL  OP1            │ 2 │               ║
   ║  33  │  OP2  SYM            │ 2 │               ║
   ║  34  │  VAL  OP2  VAL       │ 3 │ F_D_G_        ║
   ║  35  │  VAL  OP2  F         │ 3 │ F_D_G_        ║
   ║  36  │  F   OP2  VAL        │ 3 │               ║
   ║  37  │  F   OP2  F          │ 3 │               ║
   ║  38  │  F   OP2  [X]  VAL   │ 4 │               ║
   ║  39  │  VAL  [X]            │ 2 │               ║
   ║  40  │  SYM  [X]            │ 2 │               ║
   ║  41  │  SYM  [X]  ←    VAL  │ 4 │               ║
   ║  42  │  F   SYM             │ 2 │               ║
   ║  43  │  VAL  ←    VAL       │ 3 │               ║
   ║  44  │  SYM  ←    VAL       │ 3 │               ║
   ║  45  │  OP2  SYM  ←    VAL  │ 4 │               ║
   ║  46  │  SYM  ←    F         │ 3 │               ║
   ║  47  │  SYM  ←    F0        │ 3 │ V_ASS_F_      ║
   ║  48  │  SYM  ←    OP1       │ 3 │ V_ASS_F_      ║
   ║  49  │  SYM  ←    OP2       │ 3 │ V_ASS_F_      ║
   ║  50  │  ]                   │ 1 │               ║
   ║  51  │  [ ;  PIDX           │ 2 │               ║
   ║  52  │  [ ;  VAL  PIDX      │ 3 │               ║
   ║  53  │  VAL  VAL            │ 2 │               ║
   ║  54  │  SYM  )    ←    VAL  │ 4 │               ║
   ║  55  │  END  VOID           │ 2 │               ║
   ║  56  │  END  VAL            │ 2 │               ║
   ║  57  │  END  →              │ 2 │               ║
   ║  58  │  END  →    VAL       │ 3 │               ║
   ║  59  │  F   →    VAL        │ 3 │ END_GOTO_B_   ║
   ║  60  │  OP1  →    VAL       │ 3 │ END_GOTO_B_   ║
   ║  61  │  VAL  →    VAL       │ 3 │               ║
   ║  62  │  RET                 │ 1 │               ║
   ║  63  │  RET  VOID           │ 2 │               ║
   ║  64  │  RET  VAL            │ 2 │               ║
   ║  65  │  RET  →              │ 2 │               ║
   ║  66  │  RET  →    VAL       │ 3 │               ║
   ║  67  │  RET  VAL  →    VAL  │ 4 │               ║
   ╚══════╧══════════════════════╧═══╧═══════════════╝
 */


#ifndef PH   // declarations (in Prefix.hh)

# define PREFIX_HASH

   void reduce____();                ///< reduce phrase 
   void reduce_LPAR_B_RPAR_();       ///< reduce phrase LPAR B RPAR
   void reduce_LPAR_F_C_RPAR();      ///< reduce phrase LPAR F C RPAR
   void reduce_N___();               ///< reduce phrase N
   void reduce_MISC_F_B_();          ///< reduce phrase ASS F B
   void reduce_MISC_F_C_B();         ///< reduce phrase ASS F C B
   void reduce_A_F_B_();             ///< reduce phrase A F B
   void reduce_A_M_B_();             ///< reduce phrase A M B
   void reduce_A_F_C_B();            ///< reduce phrase A F C B
   void reduce_A_M_C_B();            ///< reduce phrase A M C B
   void reduce_F_M__();              ///< reduce phrase F M
   void reduce_M_M__();              ///< reduce phrase M M
   void reduce_F_M_C_();             ///< reduce phrase F M C
   void reduce_F_C_M_();             ///< reduce phrase F C M
   void reduce_F_C_M_C();            ///< reduce phrase F C M C
   void reduce_A_M__();              ///< reduce phrase A M
   void reduce_D_V__();              ///< reduce phrase D V
   void reduce_F_D_B_();             ///< reduce phrase F D B
   void reduce_F_D_G_();             ///< reduce phrase F D G
   void reduce_F_D_C_B();            ///< reduce phrase F D C B
   void reduce_A_C__();              ///< reduce phrase A C
   void reduce_V_C__();              ///< reduce phrase V C
   void reduce_V_C_ASS_B();          ///< reduce phrase V C ASS B
   void reduce_F_V__();              ///< reduce phrase F V
   void reduce_A_ASS_B_();           ///< reduce phrase A ASS B
   void reduce_V_ASS_B_();           ///< reduce phrase V ASS B
   void reduce_D_V_ASS_B();          ///< reduce phrase D V ASS B
   void reduce_V_ASS_F_();           ///< reduce phrase V ASS F
   void reduce_RBRA___();            ///< reduce phrase RBRA
   void reduce_LBRA_I__();           ///< reduce phrase LBRA I
   void reduce_LBRA_B_I_();          ///< reduce phrase LBRA B I
   void reduce_A_B__();              ///< reduce phrase A B
   void reduce_V_RPAR_ASS_B();       ///< reduce phrase V RPAR ASS B
   void reduce_END_VOID__();         ///< reduce phrase END VOID
   void reduce_END_B__();            ///< reduce phrase END B
   void reduce_END_GOTO__();         ///< reduce phrase END GOTO
   void reduce_END_GOTO_B_();        ///< reduce phrase END GOTO B
   void reduce_A_GOTO_B_();          ///< reduce phrase A GOTO B
   void reduce_RETC___();            ///< reduce phrase RETC
   void reduce_RETC_VOID__();        ///< reduce phrase RETC VOID
   void reduce_RETC_A__();           ///< reduce phrase RETC A
   void reduce_RETC_GOTO__();        ///< reduce phrase RETC GOTO
   void reduce_RETC_GOTO_B_();       ///< reduce phrase RETC GOTO B
   void reduce_RETC_A_GOTO_B();      ///< reduce phrase RETC A GOTO B

   enum { PHRASE_COUNT   = 68,      ///< number of phrases
          PHRASE_MODU    = 439,     ///< hash table size
          MAX_PHRASE_LEN = 4 };     ///< max. number of token in a phrase

      /// a hash table with all valid phrases (and many invalid entries)
      static const Phrase hash_table[PHRASE_MODU];

#else  // PH(...) defined: table instantiation (in Prefix.cc)

//PH( phrase_name    , reduce_XXX()  ,   hash  , prio , misc , len)
//═════════════════════════════════════════════════════════════════
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [00]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [01]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [02]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [03]
  PH( RBRA           , RBRA___       , 0x00004 ,   1  ,   0  ,  1),  // [04]
  PH( D V ASS B      , D_V_ASS_B     , 0x785CA ,  74  ,   0  ,  4),  // [05]
  PH( N              , N___          , 0x00006 ,   1  ,   0  ,  1),  // [06]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [07]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [08]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [09]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [0A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [0B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [0C]
  PH( RETC           , RETC___       , 0x0000D ,   1  ,   0  ,  1),  // [0D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [0E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [0F]
  PH( F V            , F_V__         , 0x001C7 ,  22  ,   0  ,  2),  // [10]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [11]
  PH( F D C B        , F_D_C_B       , 0x7A147 ,  64  ,   0  ,  4),  // [12]
  PH( D V            , D_V__         , 0x001CA ,  62  ,   0  ,  2),  // [13]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [14]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [15]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [16]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [17]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [18]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [19]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1F]
  PH( F D G          , F_D_G_        , 0x01D47 ,  63  ,   0  ,  3),  // [20]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [21]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [22]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [23]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [24]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [25]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [26]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [27]
  PH( A D G          , F_D_G_        , 0x01D4F ,  63  ,   0  ,  3),  // [28]
  PH( V ASS B        , V_ASS_B_      , 0x03C2E ,  73  ,   0  ,  3),  // [29]
  PH( A ASS B        , A_ASS_B_      , 0x03C2F ,  73  ,   0  ,  3),  // [2A]
  PH( V ASS M        , V_ASS_F_      , 0x0242E ,  73  ,   0  ,  3),  // [2B]
  PH( V ASS N        , V_ASS_F_      , 0x0182E ,  73  ,   0  ,  3),  // [2C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [2D]
  PH( END B          , END_B__       , 0x001E5 ,   2  ,   0  ,  2),  // [2E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [2F]
  PH( LPAR B RPAR    , LPAR_B_RPAR_  , 0x031EB ,   3  ,   0  ,  3),  // [30]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [31]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [32]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [33]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [34]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [35]
  PH( RETC A         , RETC_A__      , 0x001ED ,   2  ,   0  ,  2),  // [36]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [37]
  PH( A B            , A_B__         , 0x001EF ,  52  ,   0  ,  2),  // [38]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [39]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [3A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [3B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [3C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [3D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [3E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [3F]
  PH( END GOTO B     , END_GOTO_B_   , 0x03C45 ,   3  ,   0  ,  3),  // [40]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [41]
  PH( F GOTO B       , END_GOTO_B_   , 0x03C47 ,   3  ,   0  ,  3),  // [42]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [43]
  PH( M GOTO B       , END_GOTO_B_   , 0x03C49 ,   3  ,   0  ,  3),  // [44]
  PH( END GOTO       , END_GOTO__    , 0x00045 ,   2  ,   0  ,  2),  // [45]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [46]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [47]
  PH( RETC GOTO B    , RETC_GOTO_B_  , 0x03C4D ,   3  ,   0  ,  3),  // [48]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [49]
  PH( A GOTO B       , A_GOTO_B_     , 0x03C4F ,   3  ,   0  ,  3),  // [4A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [4B]
  PH( LBRA I         , LBRA_I__      , 0x00203 ,   2  ,   0  ,  2),  // [4C]
  PH( RETC GOTO      , RETC_GOTO__   , 0x0004D ,   2  ,   0  ,  2),  // [4D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [4E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [4F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [50]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [51]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [52]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [53]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [54]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [55]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [56]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [57]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [58]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [59]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [5A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [5B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [5C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [5D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [5E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [5F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [60]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [61]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [62]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [63]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [64]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [65]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [66]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [67]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [68]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [69]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [6A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [6B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [6C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [6D]
  PH( END VOID       , END_VOID__    , 0x00225 ,   2  ,   0  ,  2),  // [6E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [6F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [70]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [71]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [72]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [73]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [74]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [75]
  PH( RETC VOID      , RETC_VOID__   , 0x0022D ,   2  ,   0  ,  2),  // [76]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [77]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [78]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [79]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [7A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [7B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [7C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [7D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [7E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [7F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [80]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [81]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [82]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [83]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [84]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [85]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [86]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [87]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [88]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [89]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [8A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [8B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [8C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [8D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [8E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [8F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [90]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [91]
  PH( F M C          , F_M_C_        , 0x02127 ,  43  ,   0  ,  3),  // [92]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [93]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [94]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [95]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [96]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [97]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [98]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [99]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [9A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [9B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [9C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [9D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [9E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [9F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A0]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A1]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A2]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A3]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A4]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A5]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A6]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A7]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A8]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [A9]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [AA]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [AB]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [AC]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [AD]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [AE]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [AF]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [B0]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [B1]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [B2]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [B3]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [B4]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [B5]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [B6]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [B7]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [B8]
  PH( LBRA B I       , LBRA_B_I_     , 0x041E3 ,   3  ,   0  ,  3),  // [B9]
  PH( RETC A GOTO B  , RETC_A_GOTO_B , 0x789ED ,   4  ,   0  ,  4),  // [BA]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [BB]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [BC]
  PH( V ASS D        , V_ASS_F_      , 0x0282E ,  73  ,   0  ,  3),  // [BD]
  PH( V ASS F        , V_ASS_F_      , 0x01C2E ,  73  ,   0  ,  3),  // [BE]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [BF]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C0]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C1]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C2]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C3]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C4]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C5]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C6]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C7]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C8]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [C9]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [CA]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [CB]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [CC]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [CD]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [CE]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [CF]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D0]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D1]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D2]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D3]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D4]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D5]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D6]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D7]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D8]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [D9]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [DA]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [DB]
  PH( ASS F B        , MISC_F_B_     , 0x03CE1 ,  22  ,   1  ,  3),  // [DC]
  PH( GOTO F B       , MISC_F_B_     , 0x03CE2 ,  22  ,   1  ,  3),  // [DD]
  PH( LBRA F B       , MISC_F_B_     , 0x03CE3 ,  22  ,   1  ,  3),  // [DE]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [DF]
  PH( END F B        , MISC_F_B_     , 0x03CE5 ,  22  ,   1  ,  3),  // [E0]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [E1]
  PH( F F B          , MISC_F_B_     , 0x03CE7 ,  22  ,   1  ,  3),  // [E2]
  PH( C F B          , MISC_F_B_     , 0x03CE8 ,  22  ,   1  ,  3),  // [E3]
  PH( M F B          , MISC_F_B_     , 0x03CE9 ,  22  ,   1  ,  3),  // [E4]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [E5]
  PH( LPAR F B       , MISC_F_B_     , 0x03CEB ,  22  ,   1  ,  3),  // [E6]
  PH( LPAR F RPAR    , LPAR_B_RPAR_  , 0x030EB ,   3  ,   0  ,  3),  // [E7]
  PH( RETC F B       , MISC_F_B_     , 0x03CED ,  22  ,   1  ,  3),  // [E8]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [E9]
  PH( A F B          , A_F_B_        , 0x03CEF ,  33  ,   0  ,  3),  // [EA]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [EB]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [EC]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [ED]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [EE]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [EF]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F0]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F1]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F2]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F3]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F4]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F5]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F6]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F7]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F8]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [F9]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [FA]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [FB]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [FC]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [FD]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [FE]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [FF]
  PH( V C ASS B      , V_C_ASS_B     , 0x7850E ,  84  ,   0  ,  4),  // [100]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [101]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [102]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [103]
  PH( F C M          , F_C_M_        , 0x02507 ,  43  ,   0  ,  3),  // [104]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [105]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [106]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [107]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [108]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [109]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [10A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [10B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [10C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [10D]
  PH( V C            , V_C__         , 0x0010E ,  82  ,   0  ,  2),  // [10E]
  PH( A C            , A_C__         , 0x0010F ,  82  ,   0  ,  2),  // [10F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [110]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [111]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [112]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [113]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [114]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [115]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [116]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [117]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [118]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [119]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [11A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [11B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [11C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [11D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [11E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [11F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [120]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [121]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [122]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [123]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [124]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [125]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [126]
  PH( F M            , F_M__         , 0x00127 ,  42  ,   0  ,  2),  // [127]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [128]
  PH( M M            , M_M__         , 0x00129 ,  42  ,   0  ,  2),  // [129]
  PH( A M B          , A_M_B_        , 0x03D2F ,  33  ,   0  ,  3),  // [12A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [12B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [12C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [12D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [12E]
  PH( A M            , A_M__         , 0x0012F ,  42  ,   0  ,  2),  // [12F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [130]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [131]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [132]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [133]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [134]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [135]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [136]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [137]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [138]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [139]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [13A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [13B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [13C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [13D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [13E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [13F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [140]
  PH( F C M C        , F_C_M_C       , 0x42507 ,  44  ,   0  ,  4),  // [141]
  PH( F D B          , F_D_B_        , 0x03D47 ,  63  ,   0  ,  3),  // [142]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [143]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [144]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [145]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [146]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [147]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [148]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [149]
  PH( A D B          , F_D_G_        , 0x03D4F ,  63  ,   0  ,  3),  // [14A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [14B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [14C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [14D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [14E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [14F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [150]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [151]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [152]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [153]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [154]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [155]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [156]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [157]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [158]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [159]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [15A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [15B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [15C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [15D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [15E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [15F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [160]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [161]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [162]
  PH( ASS F C B      , MISC_F_C_B    , 0x7A0E1 ,  23  ,   1  ,  4),  // [163]
  PH( GOTO F C B     , MISC_F_C_B    , 0x7A0E2 ,  23  ,   1  ,  4),  // [164]
  PH( LBRA F C B     , MISC_F_C_B    , 0x7A0E3 ,  23  ,   1  ,  4),  // [165]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [166]
  PH( END F C B      , MISC_F_C_B    , 0x7A0E5 ,  23  ,   1  ,  4),  // [167]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [168]
  PH( F F C B        , MISC_F_C_B    , 0x7A0E7 ,  23  ,   1  ,  4),  // [169]
  PH( C F C B        , MISC_F_C_B    , 0x7A0E8 ,  23  ,   1  ,  4),  // [16A]
  PH( M F C B        , MISC_F_C_B    , 0x7A0E9 ,  23  ,   1  ,  4),  // [16B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [16C]
  PH( LPAR F C B     , MISC_F_C_B    , 0x7A0EB ,  23  ,   1  ,  4),  // [16D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [16E]
  PH( RETC F C B     , MISC_F_C_B    , 0x7A0ED ,  23  ,   1  ,  4),  // [16F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [170]
  PH( A F C B        , A_F_C_B       , 0x7A0EF ,  34  ,   0  ,  4),  // [171]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [172]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [173]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [174]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [175]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [176]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [177]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [178]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [179]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [17A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [17B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [17C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [17D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [17E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [17F]
  PH( V RPAR ASS B   , V_RPAR_ASS_B  , 0x7858E ,  52  ,   0  ,  4),  // [180]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [181]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [182]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [183]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [184]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [185]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [186]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [187]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [188]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [189]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [18A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [18B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [18C]
  PH( LPAR F C RPAR  , LPAR_F_C_RPAR , 0x620EB ,   4  ,   0  ,  4),  // [18D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [18E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [18F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [190]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [191]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [192]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [193]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [194]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [195]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [196]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [197]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [198]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [199]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [19A]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [19B]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [19C]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [19D]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [19E]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [19F]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A0]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A1]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A2]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A3]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A4]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A5]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A6]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A7]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A8]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1A9]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1AA]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1AB]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1AC]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1AD]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1AE]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1AF]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1B0]
  PH( A M C B        , A_M_C_B       , 0x7A12F ,  34  ,   0  ,  4),  // [1B1]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1B2]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1B3]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1B4]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1B5]
  PH(                , ___           , 0x00000 ,   0  ,   0  ,  0),  // [1B6]
#undef PH

#endif   // PH(...) defined/not defined

